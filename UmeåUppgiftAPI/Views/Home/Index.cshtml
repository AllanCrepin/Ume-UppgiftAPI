@model CatImagesViewModel
@{
    ViewData["Title"] = "Cat Gallery";
}


@{

    string[] cats = { "Funny cat", "Cute cat", "Strange cat", "Weird Cat", "Scary cat", "Dangerous cat", "Awesome cat" };
    var random = new Random();
    
}

<div class="container">
    <div class="text-center mb-4">
        <h1 class="display-4">Cat Gallery</h1>
        <p>A beautiful collection of cat images from The Cat API</p>
        @if (Model.UserSessionData != null)
        {
            <p class="small text-muted">
                Session active for @((DateTime.UtcNow - Model.UserSessionData.CreatedAt).TotalMinutes.ToString("F1")) minutes
                | Page visits: @Model.UserSessionData.PageVisits
            </p>
        }
    </div>

    <div id="cat-container" class="row">
        @foreach (var image in Model.Images)
        {
            bool isFavorite = Model.UserSessionData?.FavoriteCatIds.Contains(image.Id) ?? false;

            <div class="col-md-3 mb-4">
                <div class="card h-100 cat-card">
                    <img src="@image.Url" class="card-img-top cat-image" alt="Cat Image" data-cat-url="@image.Url" style="cursor: pointer;" loading="lazy">
                    <div class="card-body">
                        @{var randomNum = random.Next(cats.Length);}
                        <h5 class="card-title">@cats[randomNum]</h5
                        <p class="card-text">Size: @image.Width x @image.Height</p>
                        @if (isFavorite)
                        {
                            <button class="btn btn-sm btn-primary favorite-btn" disabled>
                                ❤ Favorited
                            </button>
                        }
                        else
                        {
                            <button class="btn btn-sm btn-outline-primary favorite-btn" data-cat-id="@image.Id">
                                ♡ Add to Favorites
                            </button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="text-center my-4">
        <div id="loading-spinner" class="spinner-border text-primary d-none" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>

    <input type="hidden" id="current-page" value="@Model.CurrentPage" />

    @Html.AntiForgeryToken()
</div>

<!-- Fullscreen Modal -->
<div id="image-modal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <img id="modal-image" src="" alt="Full-size cat image">
    </div>
</div>

<style>
    /* Modal Styles */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.7);
        backdrop-filter: blur(10px);
        justify-content: center;
        align-items: center;
    }

    .modal-content {
        position: relative;
        max-width: 80%;
        max-height: 80%;
    }

        .modal-content img {
            width: 100%;
            height: auto;
            border-radius: 10px;
            box-shadow: 0px 0px 15px rgba(255, 255, 255, 0.2);
        }

    /* Close Button */
    .close {
        position: absolute;
        top: 10px;
        right: 20px;
        font-size: 30px;
        color: white;
        cursor: pointer;
    }
</style>

@section Scripts {
    <script src="~/js/cat-gallery.js" asp-append-version="true"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const modal = document.getElementById("image-modal");
            const modalImg = document.getElementById("modal-image");
            const closeModal = document.querySelector(".close");

            // Open modal on image click
            document.querySelectorAll(".cat-image").forEach(img => {
                img.addEventListener("click", function () {
                    modal.style.display = "flex";
                    modalImg.src = this.dataset.catUrl;
                });
            });

            // Close modal on "X" button
            closeModal.addEventListener("click", function () {
                modal.style.display = "none";
            });

            // Close modal when clicking outside the image
            modal.addEventListener("click", function (event) {
                if (event.target === modal) {
                    modal.style.display = "none";
                }
            });
        });
    </script>
}
